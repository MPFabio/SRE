#!/bin/bash

# Test rapide pour Codespace
# V√©rifie que les services fonctionnent sans interface graphique

echo "üß™ Test rapide du lab SRE dans Codespace..."

# Test 1: V√©rifier que les pods sont en cours d'ex√©cution
echo "1Ô∏è‚É£ V√©rification des pods..."
if kubectl get pods | grep -q "Running"; then
    echo "‚úÖ Pods en cours d'ex√©cution"
else
    echo "‚ùå Aucun pod en cours d'ex√©cution"
    kubectl get pods
    exit 1
fi

# Test 2: V√©rifier les services
echo "2Ô∏è‚É£ V√©rification des services..."
if kubectl get services | grep -q "url-shortener-service"; then
    echo "‚úÖ Service URL Shortener disponible"
else
    echo "‚ùå Service URL Shortener non trouv√©"
    kubectl get services
    exit 1
fi

# Test 3: Test de sant√© du service
echo "3Ô∏è‚É£ Test de sant√© du service..."
if curl -s --connect-timeout 10 "http://localhost:30000/health" | grep -q "healthy"; then
    echo "‚úÖ Service en bonne sant√©"
else
    echo "‚ùå Service non accessible ou en mauvaise sant√©"
    echo "Tentative de diagnostic..."
    kubectl logs -l app=url-shortener --tail=10
    exit 1
fi

# Test 4: Test de cr√©ation d'URL
echo "4Ô∏è‚É£ Test de cr√©ation d'URL..."
RESPONSE=$(curl -s -X POST "http://localhost:30000/shorten?url=https://www.example.com")
if echo "$RESPONSE" | grep -q "short_code"; then
    echo "‚úÖ Cr√©ation d'URL fonctionne"
    SHORT_CODE=$(echo "$RESPONSE" | grep -o '"short_code":"[^"]*"' | cut -d'"' -f4)
    echo "   Code cr√©√©: $SHORT_CODE"
else
    echo "‚ùå Cr√©ation d'URL √©chou√©e"
    echo "R√©ponse: $RESPONSE"
    exit 1
fi

# Test 5: Test des m√©triques
echo "5Ô∏è‚É£ Test des m√©triques..."
if curl -s --connect-timeout 10 "http://localhost:30000/metrics" | grep -q "http_requests_total"; then
    echo "‚úÖ M√©triques disponibles"
else
    echo "‚ùå M√©triques non accessibles"
    exit 1
fi

# Test 6: Test de Splunk (si disponible)
echo "6Ô∏è‚É£ Test de Splunk..."
if docker ps | grep -q "splunk-sre-lab"; then
    echo "‚úÖ Splunk container en cours d'ex√©cution"
    if curl -s --connect-timeout 5 "http://localhost:8000" > /dev/null 2>&1; then
        echo "‚úÖ Splunk accessible"
    else
        echo "‚ö†Ô∏è Splunk non accessible (port forwarding n√©cessaire)"
    fi
else
    echo "‚ö†Ô∏è Splunk non d√©marr√©"
fi

echo ""
echo "üéâ Tests termin√©s avec succ√®s !"
echo ""
echo "üìã Services disponibles :"
echo "   - URL Shortener: http://localhost:30000"
echo "   - Health Check: http://localhost:30000/health"
echo "   - M√©triques: http://localhost:30000/metrics"
echo "   - Splunk: http://localhost:8000 (si port forwarding configur√©)"
echo ""
echo "üí° Pour acc√©der aux services :"
echo "   1. Ouvrez l'onglet 'Ports' dans VS Code"
echo "   2. Cliquez sur 'Open in Browser' pour les ports 30000 et 8000"
echo "   3. Ou utilisez curl dans le terminal"
echo ""
echo "üß™ Test manuel :"
echo "   curl http://localhost:30000/health"
echo "   curl http://localhost:30000/metrics"
